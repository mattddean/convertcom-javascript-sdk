/*!
 * Convert JS SDK
 * Version 1.0.0
 * Copyright(c) 2020-2022 Convert Insights, Inc
 * License Apache-2.0
 */
"use strict";var e=require("@convertcom/js-sdk-utils"),t=require("@convertcom/js-sdk-enums");exports.RuleManager=class{constructor(t,{loggerManager:r}={}){this._comparisonProcessor=e.Comparisons,this._negation="!",this._keys_case_sensitive=true,this._loggerManager=r,this._comparisonProcessor=e.objectDeepValue(t,"rules.comparisonProcessor",e.Comparisons),this._negation=String(e.objectDeepValue(t,"rules.negation","!")).valueOf(),this._keys_case_sensitive=e.objectDeepValue(t,"rules.keys_case_sensitive",true,!0)}set comparisonProcessor(e){this._comparisonProcessor=e}get comparisonProcessor(){return this._comparisonProcessor}getComparisonProcessorMethods(){return Object.getOwnPropertyNames(this._comparisonProcessor).filter((e=>"function"==typeof this._comparisonProcessor[e]))}isRuleMatched(t,r){let o;if(Object.prototype.hasOwnProperty.call(r,"OR")&&e.arrayNotEmpty(null==r?void 0:r.OR))for(let e=0,s=r.OR.length;e<s;e++)if(o=this._processAND(t,r.OR[e]),!1!==o)return o;return!1}isValidRule(e){return Object.prototype.hasOwnProperty.call(e,"matching")&&"object"==typeof e.matching&&Object.prototype.hasOwnProperty.call(e.matching,"match_type")&&"string"==typeof e.matching.match_type&&Object.prototype.hasOwnProperty.call(e.matching,"negated")&&"boolean"==typeof e.matching.negated&&Object.prototype.hasOwnProperty.call(e,"value")}_processAND(t,r){let o;if(Object.prototype.hasOwnProperty.call(r,"AND")&&e.arrayNotEmpty(null==r?void 0:r.AND)){for(let e=0,s=r.AND.length;e<s;e++)if(o=this._processORWHEN(t,r.AND[e]),!1===o)return!1;return o}return!1}_processORWHEN(t,r){let o;if(Object.prototype.hasOwnProperty.call(r,"OR_WHEN")&&e.arrayNotEmpty(null==r?void 0:r.OR_WHEN))for(let e=0,s=r.OR_WHEN.length;e<s;e++)if(o=this._processRuleItem(t,r.OR_WHEN[e]),!1!==o)return o;return!1}_processRuleItem(r,o){if(this.isValidRule(o))try{const s=o.matching.negated||!1,c=o.matching.match_type;if(-1!==this.getComparisonProcessorMethods().indexOf(c)&&"object"==typeof r)if(r.constructor===Object)for(const e of Object.keys(r)){const t=this._keys_case_sensitive?e:e.toLowerCase();if(t===(this._keys_case_sensitive?o.key:o.key.toLowerCase()))return this._comparisonProcessor[c](r[e],o.value,s)}else if(null==o?void 0:o.rule_type)for(const n of Object.getOwnPropertyNames(r.constructor.prototype)){if("constructor"===n)continue;if(n===e.camelCase(`get ${o.rule_type.replace(/_/g," ")}`)){const e=r[n](o);return Object.values(t.RuleError).includes(e)||"js_condition"===o.rule_type?e:this._comparisonProcessor[c](e,o.value,s)}}}catch(e){}return!1}};
//# sourceMappingURL=index.min.js.map
