/*!
 * Convert JS SDK
 * Version 1.0.0
 * Copyright(c) 2020-2022 Convert Insights, Inc
 * License Apache-2.0
 */
import{Comparisons as e,objectDeepValue as t,arrayNotEmpty as o,camelCase as r}from"@convertcom/js-sdk-utils";import{RuleError as s}from"@convertcom/js-sdk-enums";class c{constructor(o,{loggerManager:r}={}){this._comparisonProcessor=e,this._negation="!",this._keys_case_sensitive=true,this._loggerManager=r,this._comparisonProcessor=t(o,"rules.comparisonProcessor",e),this._negation=String(t(o,"rules.negation","!")).valueOf(),this._keys_case_sensitive=t(o,"rules.keys_case_sensitive",true,!0)}set comparisonProcessor(e){this._comparisonProcessor=e}get comparisonProcessor(){return this._comparisonProcessor}getComparisonProcessorMethods(){return Object.getOwnPropertyNames(this._comparisonProcessor).filter((e=>"function"==typeof this._comparisonProcessor[e]))}isRuleMatched(e,t){let r;if(Object.prototype.hasOwnProperty.call(t,"OR")&&o(null==t?void 0:t.OR))for(let o=0,s=t.OR.length;o<s;o++)if(r=this._processAND(e,t.OR[o]),!1!==r)return r;return!1}isValidRule(e){return Object.prototype.hasOwnProperty.call(e,"matching")&&"object"==typeof e.matching&&Object.prototype.hasOwnProperty.call(e.matching,"match_type")&&"string"==typeof e.matching.match_type&&Object.prototype.hasOwnProperty.call(e.matching,"negated")&&"boolean"==typeof e.matching.negated&&Object.prototype.hasOwnProperty.call(e,"value")}_processAND(e,t){let r;if(Object.prototype.hasOwnProperty.call(t,"AND")&&o(null==t?void 0:t.AND)){for(let o=0,s=t.AND.length;o<s;o++)if(r=this._processORWHEN(e,t.AND[o]),!1===r)return!1;return r}return!1}_processORWHEN(e,t){let r;if(Object.prototype.hasOwnProperty.call(t,"OR_WHEN")&&o(null==t?void 0:t.OR_WHEN))for(let o=0,s=t.OR_WHEN.length;o<s;o++)if(r=this._processRuleItem(e,t.OR_WHEN[o]),!1!==r)return r;return!1}_processRuleItem(e,t){if(this.isValidRule(t))try{const o=t.matching.negated||!1,c=t.matching.match_type;if(-1!==this.getComparisonProcessorMethods().indexOf(c)&&"object"==typeof e)if(e.constructor===Object)for(const r of Object.keys(e)){const s=this._keys_case_sensitive?r:r.toLowerCase();if(s===(this._keys_case_sensitive?t.key:t.key.toLowerCase()))return this._comparisonProcessor[c](e[r],t.value,o)}else if(null==t?void 0:t.rule_type)for(const n of Object.getOwnPropertyNames(e.constructor.prototype)){if("constructor"===n)continue;if(n===r(`get ${t.rule_type.replace(/_/g," ")}`)){const r=e[n](t);return Object.values(s).includes(r)||"js_condition"===t.rule_type?r:this._comparisonProcessor[c](r,t.value,o)}}}catch(e){}return!1}}export{c as RuleManager};
//# sourceMappingURL=index.min.mjs.map
